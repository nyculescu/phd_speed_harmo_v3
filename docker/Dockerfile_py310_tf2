# Use the NVIDIA TensorFlow image as the base
FROM nvcr.io/nvidia/tensorflow:23.06-tf2-py3

# Set BASH as the default shell for all RUN commands in this Dockerfile
SHELL ["/bin/bash", "-c"]

LABEL maintainer="Catalin NICULESCU (catalin-niculescu@ensity.eu)"
LABEL Description="Dockerised Simulation of Urban MObility(SUMO)"

RUN apt-get update 
RUN apt-get install -y software-properties-common
RUN apt-get install -y git
RUN apt-get install -y curl

RUN add-apt-repository ppa:sumo/stable
RUN apt-get update && apt-get install -y sumo sumo-tools sumo-doc
ENV SUMO_HOME=/usr/share/sumo
ENV PATH=$PATH:$SUMO_HOME/bin

# Install TensorFlow and other dependencies
RUN python3 -m pip install --upgrade pip \
    tensorflow \
    tensorflow-probability \
    matplotlib \
    gymnasium \
    torch \
    parameterized \
    traci \
    statsmodels \
    sb3-contrib \
    stable-baselines3 \
    stable-baselines3[extra] \
    gymnasium \
    tensorboard

# Install VS Code
RUN apt-get update && apt-get install -y wget gpg
RUN wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
RUN install -o root -g root -m 644 packages.microsoft.gpg /usr/share/keyrings/
RUN sh -c 'echo "deb [arch=amd64 signed-by=/usr/share/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'
RUN apt-get update && apt-get install -y code
RUN curl -fsSL https://code-server.dev/install.sh | sh
ARG USERNAME=vscode
ARG USER_UID=1000
ARG USER_GID=$USER_UID
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
    && apt-get update \
    && apt-get install -y sudo \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

RUN code-server --install-extension ms-python.python
# RUN code-server --install-extension ms-toolsai.tensorboard

# Install OpenSSH server used for remote development
RUN apt-get update && apt-get install -y openssh-server
RUN mkdir /var/run/sshd
RUN echo 'root:password' | chpasswd
RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
EXPOSE 22
CMD ["/usr/sbin/sshd", "-D"]

# Clone the repository
RUN git clone https://github.com/nyculescu/phd_speed_harmo_v3.git /app/phd_speed_harmo_v3
RUN chown -R vscode:vscode /app/phd_speed_harmo_v3

# Set the working directory
WORKDIR /app/phd_speed_harmo_v3

# Ensure that Dockerfile has a valid CMD or ENTRYPOINT that keeps the container running. Note: not relevan since the at startup, -it flag is used to keep the container running
CMD ["tail", "-f", "/dev/null"]

### Connect to VS Code running in a Docker container from a Windows machine
# Install Remote Development extension in VS Code
# Run the container /> docker run -it -d -p 2222:22 --gpus all -e DISPLAY=host.docker.internal:0.0 -v /tmp/.X11-unix:/tmp/.X11-unix -e DONT_PROMPT_WSL_INSTALL=1 --user=vscode --name phd-speed-harmo-docker phd-speed-harmo:py310-tf2 /bin/bash
# Remove the container /> docker rm -f phd-speed-harmo-docker

### Build the Docker image with the following command from the folder containing the docker file:
# With cache /> docker build -f Dockerfile_py310_tf2 -t phd-speed-harmo:py310-tf2 .
# Without cache /> docker build --no-cache -f Dockerfile_py310_tf2 -t phd-speed-harmo:py310-tf2 .

### After building the image, you can run the container with the following command:
# download and install VcXsrv, then configure it like this:
    # 1. Choose "Multiple windows" in the first screen.
    # 2. Select "Start no client" in the second screen.
    # 3. In the "Extra settings" screen:
        # 3.1. Check "Disable access control"
        # 3.2. Optionally, check "Native opengl" (this can help with some applications)
    # 4. Click "Finish" to start the X server.
# Get the IP address of the host machine with /> ipconfig
# Start Docker container/> docker run -it --rm -e DISPLAY=192.168.0.37:0.0 phd-speed-harmo:py310-tf2
# Start Docker container V2/> docker run --gpus all -it --rm -e DISPLAY=host.docker.internal:0.0 -v /tmp/.X11-unix:/tmp/.X11-unix -e DONT_PROMPT_WSL_INSTALL=1 --user=vscode phd-speed-harmo:py310-tf2 /bin/bash
# Start Docker container V3/> docker run --gpus all -it --rm -e DISPLAY=host.docker.internal:0.0 -v /tmp/.X11-unix:/tmp/.X11-unix -e DONT_PROMPT_WSL_INSTALL=1 -v /home/vscode/.local/share/code-server/extensions:/home/vscode/.vscode-server/extensions --user=vscode phd-speed-harmo:py310-tf2 /bin/bash

# Inside the Docker container, run:
    # /> export LIBGL_ALWAYS_INDIRECT=1
    # /> sumo-gui